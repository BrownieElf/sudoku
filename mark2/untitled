  



 p number_totals_remaining = [6, 1, 5, 10, 20, 2, 3, 21, 0]
 numbers = [1,2,3,4,5,6,7,8,9]

#p number_totals_remaining.inject {|x, y| y <=> x }
arr = []
smallest = nil
i = 0
order =[]
first = {}
hash = []
(1..9).each do |blah|
  number_totals_remaining.each_with_index do |num, index|
    unless num.is_a?(String)
      smallest ||= num
      if num < smallest
        smallest = num
        i = index
      end
      # if index == 8
      #   arr << (index + 1)
      #   order << i
      #   first[i] = (index + 1)
      #   number_totals_remaining[i] = num.to_s
      # end

    end

  end
  p number_totals_remaining
end

arr << (index + 1)
        order << i
        first[i] = (index + 1)
        number_totals_remaining[i] = num.to_s
      p "smallest"
      p smallest
      p order
p smallest
p arr
#p order 
p first
  p number_totals_remaining







#p number_totals_remaining.sort! { |x,y| x <=> y }
# array = []
# number_totals_remaining.each_with_index do |numbers_remaining, number|
#   array = array.inject {|num1, num2| num1 <=> num2 } 
#   p "There are #{numbers_remaining} #{number + 1}'s remaining"
# end

# p array

# array = number_totals_remaining.inject([]) do |result, element|

# end

# array = [1, 2, 3, 4, 5, 6].inject([]) do |result, element|
#   result << element.to_s if element % 2 == 0
#   result
# end